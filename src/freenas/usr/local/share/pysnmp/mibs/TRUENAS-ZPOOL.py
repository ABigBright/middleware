# PySNMP SMI module. Autogenerated from smidump -f python TRUENAS-ZPOOL-MIB
# by libsmi2pysnmp-0.1.3 at Tue Aug  1 14:15:14 2023,
# Python version sys.version_info(major=3, minor=11, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter64, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, enterprises, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "enterprises")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Objects

iXsystems = ModuleIdentity((1, 3, 6, 1, 4, 1, 50536)).setRevisions(("2023-08-01 00:00",))
if mibBuilder.loadTexts: iXsystems.setOrganization("www.ixsystems.com")
if mibBuilder.loadTexts: iXsystems.setContactInfo("postal:   2490 Kruse Dr\nSan Jose, CA 95131\nemail:    support@iXsystems.com")
if mibBuilder.loadTexts: iXsystems.setDescription("The MIB file contains definitions for Zpools on the\niXsystems ZFS storage appliance (TrueNAS SCALE).")
theSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1))
zpoolMeta = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 1))
zpool = MibIdentifier((1, 3, 6, 1, 4, 1, 50536, 1, 2))
zpoolTable = MibTable((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1))
if mibBuilder.loadTexts: zpoolTable.setDescription("Table of zpool entries")
zpoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1)).setIndexNames((0, "TRUENAS-ZPOOL-MIB", "zpoolIndex"))
if mibBuilder.loadTexts: zpoolEntry.setDescription("A zpool entry")
zpoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: zpoolIndex.setDescription("zpool table index")
zpoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolName.setDescription("The name of the zpool")
zpoolHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolHealth.setDescription("The health of the zpool")
zpoolReadOps = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadOps.setDescription("The number of read I/O operations sent to the pool or device,\nincluding metadata requests (averaged since system booted).")
zpoolWriteOps = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteOps.setDescription("The number of write I/O operations sent to the pool or device\n(averaged since system booted).")
zpoolReadBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadBytes.setDescription("The bandwidth of all read operations (including metadata),\nexpressed as units per second (averaged since system booted)")
zpoolWriteBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteBytes.setDescription("The bandwidth of all write operations, expressed as units per\nsecond (averaged since system booted).")
zpoolReadOps1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadOps1sec.setDescription("The number of read I/O operations sent to the pool or device,\nincluding metadata requests (over 1 second interval).")
zpoolWriteOps1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteOps1sec.setDescription("The number of write I/O operations sent to the pool or device\n(over 1 second interval).")
zpoolReadBytes1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolReadBytes1sec.setDescription("The bandwidth of all read operations (including metadata),\nexpressed as units per second (over 1 second interval)")
zpoolWriteBytes1sec = MibTableColumn((1, 3, 6, 1, 4, 1, 50536, 1, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zpoolWriteBytes1sec.setDescription("The bandwidth of all write operations, expressed as units per\nsecond (over 1 second interval).")

# Augmentions

# Groups

zpoolObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 50536, 1, 1, 1)).setObjects(*(("TRUENAS-ZPOOL-MIB", "zpoolName"), ("TRUENAS-ZPOOL-MIB", "zpoolHealth"), ("TRUENAS-ZPOOL-MIB", "zpoolReadOps"), ("TRUENAS-ZPOOL-MIB", "zpoolWriteOps"), ("TRUENAS-ZPOOL-MIB", "zpoolReadBytes"), ("TRUENAS-ZPOOL-MIB", "zpoolWriteBytes"), ("TRUENAS-ZPOOL-MIB", "zpoolReadOps1sec"), ("TRUENAS-ZPOOL-MIB", "zpoolWriteOps1sec"), ("TRUENAS-ZPOOL-MIB", "zpoolReadBytes1sec"), ("TRUENAS-ZPOOL-MIB", "zpoolWriteBytes1sec"), ) )
if mibBuilder.loadTexts: zpoolObjects.setDescription("A collection of objects providing support for\nthe zpool MIBs.")

# Compliances

zpoolCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 50536, 1, 1, 2)).setObjects(*(("TRUENAS-ZPOOL-MIB", "zpoolObjects"), ) )
if mibBuilder.loadTexts: zpoolCompliance.setDescription("Compliance!")

# Exports

# Module identity
mibBuilder.exportSymbols("TRUENAS-ZPOOL-MIB", PYSNMP_MODULE_ID=iXsystems)

# Objects
mibBuilder.exportSymbols("TRUENAS-ZPOOL-MIB", iXsystems=iXsystems, theSystem=theSystem, zpoolMeta=zpoolMeta, zpool=zpool, zpoolTable=zpoolTable, zpoolEntry=zpoolEntry, zpoolIndex=zpoolIndex, zpoolName=zpoolName, zpoolHealth=zpoolHealth, zpoolReadOps=zpoolReadOps, zpoolWriteOps=zpoolWriteOps, zpoolReadBytes=zpoolReadBytes, zpoolWriteBytes=zpoolWriteBytes, zpoolReadOps1sec=zpoolReadOps1sec, zpoolWriteOps1sec=zpoolWriteOps1sec, zpoolReadBytes1sec=zpoolReadBytes1sec, zpoolWriteBytes1sec=zpoolWriteBytes1sec)

# Groups
mibBuilder.exportSymbols("TRUENAS-ZPOOL-MIB", zpoolObjects=zpoolObjects)

# Compliances
mibBuilder.exportSymbols("TRUENAS-ZPOOL-MIB", zpoolCompliance=zpoolCompliance)
